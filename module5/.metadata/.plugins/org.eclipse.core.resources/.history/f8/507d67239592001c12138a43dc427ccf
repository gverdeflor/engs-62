/*
 * wifi.c
 */

#include "wifi.h"				/* WiFi module interface */

static XUartPs uart0port; 					/* UART0 port instance */
static XUartPs uart1port; 					/* UART1 port instance */
static bool done = false;					/* UART interrupt status */
static int wifi_mode = CONFIGURE;			/* WiFi module operation mode */

static int updateval;
static int buffcount = 0;					// for receiving
static u8 *charbuff;						// for sending
static u8 pingbuff[sizeof(ping_t)];
static u8 updatebuff[sizeof(update_response_t)];

/*
 * Sends ping message to local server over UART
 */
void send_ping(void) {
	// Declare and initialize ping message to be sent
	ping_t ping;
	ping.type = PING;
	ping.id = 25;
	XUartPs_Send(&uart0port, (u8*) &ping, sizeof(ping_t));
}

/*
 * Sends update message to local server over UART
 */
void send_update(void *value) {
	// Convert string pointer value to integer
	updateval = atoi((char*) value);

	// Declare and initialize update message to be sent
	update_request_t update_request;
	update_request.type = UPDATE;
	update_request.id = 25;
	update_request.value = updateval;

	//printf("Update Value: %d\n", updateval);
	wifi_mode = UPDATE;
	XUartPs_Send(&uart0port, (u8*) &update_request, sizeof(update_request_t));
}

/*
 * Changes WiFi mode to reading update request
 */
void changeToRead(void) {
	wifi_mode = READ;		// Change to read update mode
	charbuff = updatebuff;	// Set character buffer to start of update buffer
}

/*
 * Handles UART1 communication from keyboard input
 */
void uart1_handler(void *CallBackRef, u32 Event, unsigned int EventData);

/*
 * Handles UART0 communication from WiFi module
 */
void uart0_handler(void *CallBackRef, u32 Event, unsigned int EventData);
