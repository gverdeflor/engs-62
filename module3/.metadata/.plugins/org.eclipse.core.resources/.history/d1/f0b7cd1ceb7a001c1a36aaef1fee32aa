/*
 * ttc.c
 *
 * NOTE: The TTC hardware must be enabled (Timer 0 on the processing system) before it can be used!!
 *
 */

#include <stdio.h>
#include "xttcps.h"
#include "xparameters.h"  	/* constants used by the hardware */
#include "xil_types.h"		/* types used by xilinx */

static XtcPs ttcport;			/* timer port instance */

/*
 * ttc_init -- initialize the ttc freqency and callback
 */
void ttc_init(u32 freq, void (*ttc_callback)(void)) {

	XTtcPs_Config *config = XTtcPs_LookupConfig(XPAR_XTTCPS_0_DEVICE_ID);
	XTtcPs_CfgInitialize(&ttcport, config, config->BaseAddress);

	XTtcPs_SetPrescaler(&ttcport, u8 PrescalerValue);
}

/*
 * ttc_start -- start the ttc
 */
void ttc_start(void);

/*
 * ttc_stop -- stop the ttc
 */
void ttc_stop(void);

/*
 * ttc_close -- close down the ttc
 */
void ttc_close(void);


//void ttc_init(u32 freq, void (*ttc_callback)(void)) {
//	XTtcPs_Config *port_config = XTtcPs_LookupConfig(XPAR_XTTCPS_0_DEVICE_ID XPAR_PS7_TTC_0_DEVICE_ID);
//
//	s32 output = XTtcPs_CfgInitialize(&port, port_config, port_config->BaseAddress);
//
//
////	* @param	PrescalerValue is a number from 0-16 that sets the prescaler
////	*		    to use.
////	*		    If the parameter is 0 - 15, use a prescaler on the clock of
////	*		    2^(PrescalerValue+1), or 2-65536.
////	*		    If the parameter is XTTCPS_CLK_CNTRL_PS_DISABLE, do not use a
////	*		    prescaler.
////	*
////	*		    Valid values are: 0 - 15
//
//	XTtcPs_SetPrescaler(&port, u8 PrescalerValue);
//	XTtcPs_SetInterval(&port, ?? interval value);
//	XTtcPs_SetOptions();
//
//	XTtcPs_CalcIntervalFromFreq(&port, u32 Freq,
//	        XInterval *Interval, u8 *Prescaler);
//
//}
